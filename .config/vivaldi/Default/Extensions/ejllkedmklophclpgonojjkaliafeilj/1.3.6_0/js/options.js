class Options{constructor(){this.inputs=document.getElementsByTagName("input"),this.saveBtn=document.getElementById("save"),this.config=null,this.run()}run(){this.initStorage().then(a=>{this.config=a.config||{},this.showHotkeys(),this.initListeners()})}initStorage(){return new Promise(a=>{chrome.storage.local.get(b=>{a(b)})})}showHotkeys(){for(let a,b=0;b<this.inputs.length;b++)a=this.inputs[b],a.addEventListener("keyup",a=>this.validateInput(a)),a.addEventListener("focus",function(){this.select()}),this.config.hotkeys&&this.config.hotkeys[a.id]&&(a.value=this.config.hotkeys[a.id])}validateInput(a){let b=a.target.value.toUpperCase().replace(/([^0-9A-Z])/g,"");for(let c,d=0;d<this.inputs.length;d++)c=this.inputs[d],c!==a.target&&c.value===b&&(b="");a.target.value=b,this.config.hotkeys&&this.config.hotkeys[a.target.id]===a.target.value||this.removeClass(this.saveBtn,"hide")}initListeners(){this.initDOMListeners()}initDOMListeners(){this.saveBtn.addEventListener("click",()=>this.saveChanges())}saveChanges(){this.config.hotkeys=this.config.hotkeys||{};for(let a,b=0;b<this.inputs.length;b++)a=this.inputs[b],a.value?this.config.hotkeys[a.id]=a.value:delete this.config.hotkeys[a.id];chrome.storage.local.set({config:this.config},()=>{this.addClass(this.saveBtn,"hide")})}addClass(a,b){0<=a.className.indexOf(b)||(a.className=a.className+" "+b)}removeClass(a,b){a.className=a.className.replace(new RegExp("\\b"+b+"\\b","g"),"")}}const optionsPage=new Options;